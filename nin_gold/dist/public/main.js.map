{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/first/first.component.css","webpack:///./src/app/first/first.component.html","webpack:///./src/app/first/first.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/second/second.component.css","webpack:///./src/app/second/second.component.html","webpack:///./src/app/second/second.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".app{\\r\\n    display: inline-block;\\r\\n}\"","module.exports = \"<h2>Gold Count: {{gold}}</h2><br>\\n<div class = \\\"app\\\">\\n    <app-first></app-first>\\n    <app-second></app-second>\\n</div>\"","import { Component, OnInit} from '@angular/core';\nimport { HttpService } from 'src/app/http.service';\nimport { FirstComponent } from 'src/app/first/first.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  gold:number =  0;\n  constructor(private _dataService: HttpService) {\n    _dataService.goldChange.subscribe(x => this.gold = x);\n  }\n  ngOnInit(){\n    this.gold = this._dataService.gold;\n  }\n}","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { FirstComponent } from './first/first.component';\nimport { SecondComponent } from './second/second.component';\nimport { HttpService } from './http.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FirstComponent,\n    SecondComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","module.exports = \".box{\\r\\n    display: inline-block;\\r\\n    text-align: center;\\r\\n    width: 200px;\\r\\n}\\r\\n\"","module.exports = \"<fieldset>\\r\\n    <div class = \\\"box\\\">\\r\\n      <h2>Farm</h2>\\r\\n      <h5>Earns 2-5 Gold</h5>\\r\\n      <button (click) = \\\"Explore('farm')\\\">Farm!</button>\\r\\n    </div>\\r\\n    <div class = \\\"box\\\">\\r\\n      <h2>Cave</h2>\\r\\n      <h5>Earns 5-10 Gold</h5>\\r\\n      <button (click) = \\\"Explore('cave')\\\">Cave!</button>\\r\\n    </div>\\r\\n    <div class = \\\"box\\\">\\r\\n      <h2>Casino</h2>\\r\\n      <h5>Earn up to or lose up to 100 Gold</h5>\\r\\n      <button (click) = \\\"Explore('casino')\\\">Casino!</button>\\r\\n    </div>\\r\\n    <div class = \\\"box\\\">\\r\\n      <h2>House</h2>\\r\\n      <h5>Earns 7-15 Gold</h5>\\r\\n      <button (click) = \\\"Explore('house')\\\">House!</button>\\r\\n    </div>\\r\\n  </fieldset>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpService } from 'src/app/http.service';\r\nimport { COMPILER_OPTIONS } from '@angular/core/src/linker/compiler';\r\nimport { concat } from 'rxjs/internal/observable/concat';\r\n\r\n@Component({\r\n  selector: 'app-one',\r\n  templateUrl: './first.component.html',\r\n  styleUrls: ['./first.component.css']\r\n})\r\nexport class FirstComponent implements OnInit {\r\n  Explore(type){\r\n    if(type == \"house\"){\r\n      this._httpService.addgold(7,16,\"house\")\r\n    }\r\n    else if(type == \"cave\"){\r\n      this._httpService.addgold(5,11,\"cave\")\r\n    }\r\n    else if(type == \"farm\"){\r\n      this._httpService.addgold(2,6,\"farm\")\r\n    }\r\n    else if(type == \"casino\"){\r\n      this._httpService.addgold(0,101,\"casino\")\r\n    }\r\n    else{\r\n      console.log(\"it was else\")\r\n    }\r\n  }\r\n  constructor(private _httpService: HttpService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}","import { Injectable, OnInit} from '@angular/core';\r\nimport { Subject } from 'rxjs'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpService{\r\n  goldChange: Subject<number> = new Subject<number>();\r\n  gold: number = 0;\r\n  quotes: string[] = [];\r\n  addgold(max,min,place): number{\r\n    let x: number = Math.floor(Math.random() * (max-min)+ min)\r\n    let line: string = \"You've earned \" + x\r\n    if(place == \"casino\"){\r\n      let y: number = Math.floor(Math.random() * 2)\r\n      if(y == 1){\r\n        line = \"You've lost \" + x\r\n        x = -x\r\n      }\r\n    }\r\n    this.gold = this.gold + x;\r\n    this.goldChange.next(this.gold)\r\n    this.quotes.push(line + \" gold(s) at the \" + place)\r\n    return x \r\n  }\r\n  constructor() { }\r\n}","module.exports = \".box{\\r\\n    display: inline-block;\\r\\n    text-align: center;\\r\\n    width: 200px;\\r\\n}\"","module.exports = \"<fieldset>\\r\\n    <div class = \\\"box\\\">\\r\\n      <h2>Farm</h2>\\r\\n      <h5>Earns 2-5 Gold</h5>\\r\\n      <button (click) = \\\"Explore('farm')\\\">Farm!</button>\\r\\n    </div>\\r\\n    <div class = \\\"box\\\">\\r\\n      <h2>Cave</h2>\\r\\n      <h5>Earns 5-10 Gold</h5>\\r\\n      <button (click) = \\\"Explore('cave')\\\">Cave!</button>\\r\\n    </div>\\r\\n    <div class = \\\"box\\\">\\r\\n      <h2>Casino</h2>\\r\\n      <h5>Earn up to or lose up to 100 Gold</h5>\\r\\n      <button (click) = \\\"Explore('casino')\\\">Casino!</button>\\r\\n    </div>\\r\\n    <div class = \\\"box\\\">\\r\\n      <h2>House</h2>\\r\\n      <h5>Earns 7-15 Gold</h5>\\r\\n      <button (click) = \\\"Explore('house')\\\">House!</button>\\r\\n    </div>\\r\\n  </fieldset>\"","import { Component, OnInit } from '@angular/core';\r\nimport { HttpService } from 'src/app/http.service';\r\n\r\n@Component({\r\n  selector: 'app-two',\r\n  templateUrl: './second.component.html',\r\n  styleUrls: ['./second.component.css']\r\n})\r\nexport class SecondComponent implements OnInit {\r\n  quotes: string[] = this._httpService.quotes\r\n  constructor(private _httpService: HttpService) { }\r\n  ngOnInit() {\r\n  }\r\n\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}